plugins {
    id "com.commercehub.gradle.plugin.avro" version "0.5.0"
}

sourceCompatibility = 1.7

configurations {
    provided
    compile.extendsFrom provided
}

archivesBaseName = 'AdImpressionLogAggr'
version = '2.0-SNAPSHOT'

allprojects {
  repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/groups/public" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repository.snappydata.io:8089/repository/internal" }
    maven { url "http://repository.snappydata.io:8089/repository/snapshots" }
    maven { url 'https://clojars.org/repo' }
  }

  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'scala'
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  apply plugin: "com.commercehub.gradle.plugin.avro"

  dependencies {
    compile 'org.scala-lang:scala-library:2.10.6'
    compile 'org.scala-lang:scala-reflect:2.10.6'
  }
}

dependencies {
  provided 'io.snappydata:snappy-tools_2.10:0.2.1-PREVIEW'
  provided 'io.snappydata:snappy-core_2.10:0.2.1-PREVIEW'
  provided 'io.snappydata:snappy-aqp:0.2.1-PREVIEW'
  provided 'io.snappydata:snappy-spark-catalyst_2.10:1.6.0-BETA'
  compile 'com.miguno:kafka-avro-codec_2.10:0.1.1-SNAPSHOT'
  compile 'com.twitter:algebird-core_2.10:0.1.11'
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
  source("src/avro")
  outputDir = file("src/main/java")
}

compileJava.source(generateAvro.outputs)

avro.stringType = "charSequence"
 
task createAndPublishLogs(type: JavaExec, dependsOn: classes) {
    main = 'io.snappydata.examples.adanalytics.KafkaLogProducer'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
    systemProperties System.getProperties()
    systemProperty "numThreads", System.getProperty("numThreads")
}

task startLogAggregation_Spark(type: JavaExec, dependsOn: classes) {
    main = 'io.snappydata.examples.adanalytics.SnappySparkLogAggregator'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
    jvmArgs = ['-XX:MaxPermSize=512m']
}

task startLogAggregation(type: JavaExec, dependsOn: classes) {
    main = 'io.snappydata.examples.adanalytics.SnappyIngestionPerf'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
    jvmArgs = ['-XX:MaxPermSize=512m']
}

jar {
    dependsOn configurations.runtime
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}


