plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
  id 'com.commercehub.gradle.plugin.avro' version "0.5.0"
}

archivesBaseName = 'snappy-poc'

allprojects {

  version = '0.6.1'

  repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/groups/public" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://mvnrepository.com/artifact" }
    maven { url 'https://clojars.org/repo' }
  }

  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'scala'
  apply plugin: "com.commercehub.gradle.plugin.avro"

  configurations {
    provided {
      description 'a dependency that is provided externally at runtime'
      visible true
    }
  }

  sourceSets {
    main.compileClasspath += configurations.provided
    main.runtimeClasspath -= configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
  }

  javadoc.classpath += configurations.provided

  configurations.all {
    resolutionStrategy.cacheChangingModulesFor 4, 'hours'
  }

  dependencies {
    compile 'org.scala-lang:scala-library:2.10.5'
    compile 'org.scala-lang:scala-reflect:2.10.5'
    compile 'org.scala-lang:scala-compiler:2.10.5'
  }
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
  source("src/avro")
  outputDir = file("src/main/java")
}

compileJava.source(generateAvro.outputs)

avro.stringType = "charSequence"

ext {
  assemblyJar = rootProject.tasks.getByPath(':assembly:shadowJar').outputs
}

def assemblyJar = tasks.getByPath(':assembly:shadowJar').outputs

dependencies {
  compile "org.apache.spark:spark-core_2.10:1.5.2"
  compile "org.apache.spark:spark-streaming_2.10:1.5.2"
  compile "org.apache.spark:spark-streaming-kafka_2.10:1.5.2"
  compile "org.apache.spark:spark-sql_2.10:1.5.2"
  compile "org.apache.spark:spark-catalyst_2.10:1.5.2"
  compile 'com.miguno:kafka-avro-codec_2.10:0.1.1-SNAPSHOT'
  compile 'org.apache.kafka:kafka_2.10:0.8.2.1'
  compile 'com.googlecode.javaewah:JavaEWAH:1.1.5'
  compile 'org.joda:joda-convert:1.2'
  compile 'com.memsql:memsql-connector_2.10:1.3.3'
}

task generateAdImpressions(type: JavaExec, dependsOn: classes) {
  main = 'io.snappydata.adanalytics.KafkaAdImpressionProducer'
  classpath sourceSets.test.runtimeClasspath
  environment 'PROJECT_ASSEMBLY_JAR', assemblyJar.files.asPath
}

task startMemSqlStreamIngestPerf(type: JavaExec, dependsOn: classes) {
  main = 'org.memsql.benchmark.MemSqlStreamIngestPerf'
  classpath sourceSets.test.runtimeClasspath
  environment 'PROJECT_ASSEMBLY_JAR', assemblyJar.files.asPath
}

task startMemSqlQueryPerf(type: JavaExec, dependsOn: classes) {
  main = 'org.memsql.benchmark.MemSqlQueryPerf'
  classpath sourceSets.test.runtimeClasspath
  environment 'PROJECT_ASSEMBLY_JAR', assemblyJar.files.asPath
}